import type { CreateArrayWithLengthX, NumericRange } from "./common.ts";

export type TYPE_HTTP_CODE_3XX =
  /** Multiple Choices */
  | 300
  /** Moved Permanently */
  | 301
  /** Found */
  | 302
  /** See Other */
  | 303
  /** Not Modified */
  | 304
  /** @deprecated Use Proxy */
  | 305
  /** @deprecated (Unused) 306 */
  | 306
  /** Temporary Redirect */
  | 307
  /** Permanent Redirect */
  | 308;

/**
 * # [15.4.](https://httpwg.org/specs/rfc9110.html#rfc.section.15.4) [Redirection 3xx](https://httpwg.org/specs/rfc9110.html#status.3xx)
 *
 * The 3xx (Redirection) class of status code indicates that further action
 * needs to be taken by the user agent in order to fulfill the request. There
 * are several types of redirects:
 *
 * 1. Redirects that indicate this resource might be available at a different URI, as provided by the [Location](https://httpwg.org/specs/rfc9110.html#field.location) header field, as in the status codes [301 (Moved Permanently)](https://httpwg.org/specs/rfc9110.html#status.301), [302 (Found)](https://httpwg.org/specs/rfc9110.html#status.302), [307 (Temporary Redirect)](https://httpwg.org/specs/rfc9110.html#status.307), and [308 (Permanent Redirect)](https://httpwg.org/specs/rfc9110.html#status.308).
 * 2. Redirection that offers a choice among matching resources capable of representing this resource, as in the [300 (Multiple Choices)](https://httpwg.org/specs/rfc9110.html#status.300) status code.
 * 3. Redirection to a different resource, identified by the [Location](https://httpwg.org/specs/rfc9110.html#field.location) header field, that can represent an indirect response to the request, as in the [303 (See Other)](https://httpwg.org/specs/rfc9110.html#status.303) status code.
 * 4. Redirection to a previously stored result, as in the [304 (Not Modified)](https://httpwg.org/specs/rfc9110.html#status.304) status code.
 *
 * **Note:** In HTTP/1.0, the status codes [301 (Moved Permanently)](https://httpwg.org/specs/rfc9110.html#status.301) and [302 (Found)](https://httpwg.org/specs/rfc9110.html#status.302) were originally defined as method-preserving ([[HTTP/1.0]](https://httpwg.org/specs/rfc9110.html#HTTP10), [Section 9.3](https://www.rfc-editor.org/rfc/rfc1945.html#section-9.3)) to match their implementation at CERN; [303 (See Other)](https://httpwg.org/specs/rfc9110.html#status.303) was defined for a redirection that changed its method to GET. However, early user agents split on whether to redirect POST requests as POST (according to then-current specification) or as GET (the safer alternative when redirected to a different site). Prevailing practice eventually converged on changing the method to GET. [307 (Temporary Redirect)](https://httpwg.org/specs/rfc9110.html#status.307) and [308 (Permanent Redirect)](https://httpwg.org/specs/rfc9110.html#status.308) [[RFC7538]](https://httpwg.org/specs/rfc9110.html#RFC7538) were later added to unambiguously indicate method-preserving redirects, and status codes [301](https://httpwg.org/specs/rfc9110.html#status.301) and [302](https://httpwg.org/specs/rfc9110.html#status.302) have been adjusted to allow a POST request to be redirected as GET.
 *
 * If a [Location](https://httpwg.org/specs/rfc9110.html#field.location) header field ([Section 10.2.2](https://httpwg.org/specs/rfc9110.html#field.location "Location")) is provided, the user agent _MAY_ automatically redirect its request to the URI referenced by the Location field value, even if the specific status code is not understood. Automatic redirection needs to be done with care for methods not known to be [safe](https://httpwg.org/specs/rfc9110.html#safe.methods), as defined in [Section 9.2.1](https://httpwg.org/specs/rfc9110.html#safe.methods "Safe Methods"), since the user might not wish to redirect an unsafe request.
 *
 * When automatically following a redirected request, the user agent _SHOULD_ resend the original request message with the following modifications:
 *
 * 1. Replace the target URI with the URI referenced by the redirection response's [Location](https://httpwg.org/specs/rfc9110.html#field.location) header field value after resolving it relative to the original request's target URI.
 *
 * 2. Remove header fields that were automatically generated by the implementation, replacing them with updated values as appropriate to the new request. This includes:
 *
 *     1. Connection-specific header fields (see [Section 7.6.1](https://httpwg.org/specs/rfc9110.html#field.connection "Connection")),
 *     2. Header fields specific to the client's proxy configuration, including (but not limited to) [Proxy-Authorization](https://httpwg.org/specs/rfc9110.html#field.proxy-authorization),
 *     3. Origin-specific header fields (if any), including (but not limited to) [Host](https://httpwg.org/specs/rfc9110.html#field.host),
 *     4. Validating header fields that were added by the implementation's cache (e.g., [If-None-Match](https://httpwg.org/specs/rfc9110.html#field.if-none-match), [If-Modified-Since](https://httpwg.org/specs/rfc9110.html#field.if-modified-since)), and
 *     5. Resource-specific header fields, including (but not limited to) [Referer](https://httpwg.org/specs/rfc9110.html#field.referer), Origin, [Authorization](https://httpwg.org/specs/rfc9110.html#field.authorization), and Cookie.
 *
 * 3. Consider removing header fields that were not automatically generated by the implementation (i.e., those present in the request because they were added by the calling context) where there are security implications; this includes but is not limited to [Authorization](https://httpwg.org/specs/rfc9110.html#field.authorization) and Cookie.
 *
 * 4. Change the request method according to the redirecting status code's semantics, if applicable.
 *
 * 5. If the request method has been changed to GET or HEAD, remove content-specific header fields, including (but not limited to) [Content-Encoding](https://httpwg.org/specs/rfc9110.html#field.content-encoding), [Content-Language](https://httpwg.org/specs/rfc9110.html#field.content-language), [Content-Location](https://httpwg.org/specs/rfc9110.html#field.content-location), [Content-Type](https://httpwg.org/specs/rfc9110.html#field.content-type), [Content-Length](https://httpwg.org/specs/rfc9110.html#field.content-length), Digest, [Last-Modified](https://httpwg.org/specs/rfc9110.html#field.last-modified).
 *
 *
 * A client _SHOULD_ detect and intervene in cyclical redirections (i.e., "infinite" redirection loops).
 *
 * **Note:** An earlier version of this specification recommended a maximum of five redirections ([[RFC2068]](https://httpwg.org/specs/rfc9110.html#RFC2068), [Section 10.3](https://www.rfc-editor.org/rfc/rfc2068.html#section-10.3)). Content developers need to be aware that some clients might implement such a fixed limitation.
 */
export const HTTP_CODES_3XX = {
  /**
   *
   */
  MULTIPLE_CHOICES: 300,
  /**
   *
   */
  MOVED_PERMANENTLY: 301,
  /**
   *
   */
  FOUND: 302,
  /**
   *
   */
  SEE_OTHER: 303,
  /**
   *
   */
  NOT_MODIFIED: 304,
  /**
   *
   *
   * @deprecated
   */
  USE_PROXY: 305,
  /**
   *
   */
  UNUSED_306: 306,
  /**
   *
   */
  TEMPORARY_REDIRECT: 307,
  /**
   *
   */
  PERMANENT_REDIRECT: 308,
} as const;

export const HTTP_STATUSES_3XX = {
  300: "MULTIPLE_CHOICES",
  301: "MOVED_PERMANENTLY",
  302: "FOUND",
  303: "SEE_OTHER",
  304: "NOT_MODIFIED",
  305: "USE_PROXY",
  306: "UNUSED_306",
  307: "TEMPORARY_REDIRECT",
  308: "PERMANENT_REDIRECT",
} as const;

export function isStrict3xx(value: unknown): value is TYPE_HTTP_CODE_3XX {
  if (typeof value !== "number") return false;
  return value in HTTP_STATUSES_3XX;
}

export type LOOSE_TYPE_HTTP_CODE_3XX = NumericRange<
  CreateArrayWithLengthX<300>,
  399
>;

export function is3xx(value: unknown): value is LOOSE_TYPE_HTTP_CODE_3XX {
  if (typeof value !== "number") return false;
  if (!Number.isInteger(value)) return false;
  return value >= 300 && value <= 399;
}
